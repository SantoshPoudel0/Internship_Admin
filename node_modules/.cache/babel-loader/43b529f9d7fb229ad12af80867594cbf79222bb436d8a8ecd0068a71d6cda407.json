{"ast":null,"code":"var _jsxFileName = \"C:\\\\Internship task\\\\admin\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { API_URL } from '../utils/constants';\nimport { storeAuthData, getStoredToken, getStoredUserInfo, clearAuthData, isTokenExpired, isAuthenticated } from '../utils/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_URL,\n  timeout: 5000\n});\n\n// Add a request interceptor\napi.interceptors.request.use(config => {\n  const token = getStoredToken();\n  if (token && !isTokenExpired(token)) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add a response interceptor\napi.interceptors.response.use(response => response, async error => {\n  var _error$response;\n  const originalRequest = error.config;\n\n  // If the error is due to token expiration\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    clearAuthData();\n    window.location.href = '/login';\n    return Promise.reject(error);\n  }\n  return Promise.reject(error);\n});\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Check if user is already logged in\n    try {\n      if (isAuthenticated()) {\n        const userInfo = getStoredUserInfo();\n        setCurrentUser(userInfo);\n      } else {\n        handleLogout();\n      }\n    } catch (err) {\n      console.error('Error checking authentication:', err);\n      handleLogout();\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  const handleLogout = () => {\n    clearAuthData();\n    setCurrentUser(null);\n    delete api.defaults.headers.common['Authorization'];\n  };\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await api.post('/api/admin/login', {\n        email,\n        password\n      });\n      if (response.data.success && response.data.data) {\n        const userData = response.data.data;\n\n        // Store auth data securely\n        if (storeAuthData(userData.token, userData)) {\n          setCurrentUser(userData);\n          api.defaults.headers.common['Authorization'] = `Bearer ${userData.token}`;\n          return true;\n        } else {\n          throw new Error('Failed to store authentication data');\n        }\n      } else {\n        throw new Error('Invalid response from server');\n      }\n    } catch (err) {\n      var _err$response, _err$response2, _err$response2$data;\n      console.error('Login error:', ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Failed to login. Please check your credentials.');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      currentUser,\n      loading,\n      error,\n      login,\n      logout: handleLogout,\n      api\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"JNizP9FwoqjqDhcaQoKbEEqEJbk=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","API_URL","storeAuthData","getStoredToken","getStoredUserInfo","clearAuthData","isTokenExpired","isAuthenticated","jsxDEV","_jsxDEV","AuthContext","api","create","baseURL","timeout","interceptors","request","use","config","token","headers","Authorization","error","Promise","reject","response","_error$response","originalRequest","status","_retry","window","location","href","AuthProvider","children","_s","currentUser","setCurrentUser","loading","setLoading","setError","userInfo","handleLogout","err","console","defaults","common","login","email","password","post","data","success","userData","Error","_err$response","_err$response2","_err$response2$data","message","Provider","value","logout","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Internship task/admin/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { API_URL } from '../utils/constants';\r\nimport {\r\n  storeAuthData,\r\n  getStoredToken,\r\n  getStoredUserInfo,\r\n  clearAuthData,\r\n  isTokenExpired,\r\n  isAuthenticated\r\n} from '../utils/auth';\r\n\r\nexport const AuthContext = createContext();\r\n\r\n// Create axios instance with default config\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  timeout: 5000\r\n});\r\n\r\n// Add a request interceptor\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = getStoredToken();\r\n    if (token && !isTokenExpired(token)) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add a response interceptor\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    const originalRequest = error.config;\r\n\r\n    // If the error is due to token expiration\r\n    if (error.response?.status === 401 && !originalRequest._retry) {\r\n      originalRequest._retry = true;\r\n      clearAuthData();\r\n      window.location.href = '/login';\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Check if user is already logged in\r\n    try {\r\n      if (isAuthenticated()) {\r\n        const userInfo = getStoredUserInfo();\r\n        setCurrentUser(userInfo);\r\n      } else {\r\n        handleLogout();\r\n      }\r\n    } catch (err) {\r\n      console.error('Error checking authentication:', err);\r\n      handleLogout();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const handleLogout = () => {\r\n    clearAuthData();\r\n    setCurrentUser(null);\r\n    delete api.defaults.headers.common['Authorization'];\r\n  };\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await api.post('/api/admin/login', {\r\n        email,\r\n        password\r\n      });\r\n\r\n      if (response.data.success && response.data.data) {\r\n        const userData = response.data.data;\r\n        \r\n        // Store auth data securely\r\n        if (storeAuthData(userData.token, userData)) {\r\n          setCurrentUser(userData);\r\n          api.defaults.headers.common['Authorization'] = `Bearer ${userData.token}`;\r\n          return true;\r\n        } else {\r\n          throw new Error('Failed to store authentication data');\r\n        }\r\n      } else {\r\n        throw new Error('Invalid response from server');\r\n      }\r\n    } catch (err) {\r\n      console.error('Login error:', err.response?.data || err.message);\r\n      setError(err.response?.data?.message || 'Failed to login. Please check your credentials.');\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        currentUser,\r\n        loading,\r\n        error,\r\n        login,\r\n        logout: handleLogout,\r\n        api\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}