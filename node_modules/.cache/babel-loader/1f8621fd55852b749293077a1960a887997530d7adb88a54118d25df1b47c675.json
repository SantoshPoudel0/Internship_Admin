{"ast":null,"code":"var _jsxFileName = \"C:\\\\Internship task\\\\admin\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { API_URL } from '../utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_URL,\n  timeout: 5000\n});\n\n// Add request interceptor\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add response interceptor\napi.interceptors.response.use(response => response, async error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Clear auth data on 401 responses\n    localStorage.removeItem('token');\n    localStorage.removeItem('userInfo');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Check if user is already logged in\n    const token = localStorage.getItem('token');\n    const userInfo = localStorage.getItem('userInfo');\n    if (token && userInfo) {\n      try {\n        const userData = JSON.parse(userInfo);\n        setCurrentUser(userData);\n      } catch (err) {\n        console.error('Error parsing user info:', err);\n        localStorage.removeItem('token');\n        localStorage.removeItem('userInfo');\n      }\n    }\n    setLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await api.post('/api/admin/login', {\n        email,\n        password\n      });\n      if (response.data.success && response.data.data) {\n        const {\n          token,\n          ...userData\n        } = response.data.data;\n\n        // Store auth data\n        localStorage.setItem('token', token);\n        localStorage.setItem('userInfo', JSON.stringify(userData));\n\n        // Update state\n        setCurrentUser(userData);\n        return true;\n      }\n      return false;\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Login error:', err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to login');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userInfo');\n    setCurrentUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      currentUser,\n      loading,\n      error,\n      login,\n      logout,\n      api\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"JNizP9FwoqjqDhcaQoKbEEqEJbk=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","API_URL","jsxDEV","_jsxDEV","AuthContext","api","create","baseURL","timeout","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","AuthProvider","children","_s","currentUser","setCurrentUser","loading","setLoading","setError","userInfo","userData","JSON","parse","err","console","login","email","password","post","data","success","setItem","stringify","_err$response","_err$response$data","message","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Internship task/admin/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { API_URL } from '../utils/constants';\r\n\r\nexport const AuthContext = createContext();\r\n\r\n// Create axios instance with default config\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  timeout: 5000\r\n});\r\n\r\n// Add request interceptor\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add response interceptor\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    if (error.response?.status === 401) {\r\n      // Clear auth data on 401 responses\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('userInfo');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Check if user is already logged in\r\n    const token = localStorage.getItem('token');\r\n    const userInfo = localStorage.getItem('userInfo');\r\n\r\n    if (token && userInfo) {\r\n      try {\r\n        const userData = JSON.parse(userInfo);\r\n        setCurrentUser(userData);\r\n      } catch (err) {\r\n        console.error('Error parsing user info:', err);\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('userInfo');\r\n      }\r\n    }\r\n    \r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const response = await api.post('/api/admin/login', {\r\n        email,\r\n        password\r\n      });\r\n\r\n      if (response.data.success && response.data.data) {\r\n        const { token, ...userData } = response.data.data;\r\n        \r\n        // Store auth data\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('userInfo', JSON.stringify(userData));\r\n        \r\n        // Update state\r\n        setCurrentUser(userData);\r\n        \r\n        return true;\r\n      }\r\n      \r\n      return false;\r\n    } catch (err) {\r\n      console.error('Login error:', err);\r\n      setError(err.response?.data?.message || 'Failed to login');\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('userInfo');\r\n    setCurrentUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        currentUser,\r\n        loading,\r\n        error,\r\n        login,\r\n        logout,\r\n        api\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}