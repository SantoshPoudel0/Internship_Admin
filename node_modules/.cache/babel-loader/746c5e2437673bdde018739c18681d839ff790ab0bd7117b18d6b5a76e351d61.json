{"ast":null,"code":"var _jsxFileName = \"C:\\\\Internship task\\\\admin\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { API_URL } from '../utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nconst api = axios.create({\n  baseURL: API_URL,\n  timeout: 5000\n});\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Check if user is already logged in\n    const token = localStorage.getItem('token');\n    const userInfo = localStorage.getItem('userInfo');\n    if (token && userInfo) {\n      setCurrentUser(JSON.parse(userInfo));\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    }\n    setLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await api.post('/api/admin/login', {\n        email,\n        password\n      });\n      if (response.data.success && response.data.data) {\n        const {\n          token,\n          ...userData\n        } = response.data.data;\n\n        // Store auth data\n        localStorage.setItem('token', token);\n        localStorage.setItem('userInfo', JSON.stringify(userData));\n\n        // Update state and axios defaults\n        setCurrentUser(userData);\n        api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n        return true;\n      }\n      return false;\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to login');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userInfo');\n    setCurrentUser(null);\n    delete api.defaults.headers.common['Authorization'];\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      currentUser,\n      loading,\n      error,\n      login,\n      logout,\n      api\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"JNizP9FwoqjqDhcaQoKbEEqEJbk=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","API_URL","jsxDEV","_jsxDEV","AuthContext","api","create","baseURL","timeout","AuthProvider","children","_s","currentUser","setCurrentUser","loading","setLoading","error","setError","token","localStorage","getItem","userInfo","JSON","parse","defaults","headers","common","login","email","password","response","post","data","success","userData","setItem","stringify","err","_err$response","_err$response$data","message","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Internship task/admin/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { API_URL } from '../utils/constants';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  timeout: 5000\r\n});\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Check if user is already logged in\r\n    const token = localStorage.getItem('token');\r\n    const userInfo = localStorage.getItem('userInfo');\r\n\r\n    if (token && userInfo) {\r\n      setCurrentUser(JSON.parse(userInfo));\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n    }\r\n    \r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const response = await api.post('/api/admin/login', {\r\n        email,\r\n        password\r\n      });\r\n\r\n      if (response.data.success && response.data.data) {\r\n        const { token, ...userData } = response.data.data;\r\n        \r\n        // Store auth data\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('userInfo', JSON.stringify(userData));\r\n        \r\n        // Update state and axios defaults\r\n        setCurrentUser(userData);\r\n        api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n        \r\n        return true;\r\n      }\r\n      \r\n      return false;\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Failed to login');\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('userInfo');\r\n    setCurrentUser(null);\r\n    delete api.defaults.headers.common['Authorization'];\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        currentUser,\r\n        loading,\r\n        error,\r\n        login,\r\n        logout,\r\n        api\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}